<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      i18n:domain="qploneskindump"
      metal:use-macro="here/prefs_main_template/macros/master">
<body>
<div metal:fill-slot="prefs_configlet_main">

    <div metal:define-macro="main"
         tal:define="errors options/state/getErrors | nothing;">

        <div metal:use-macro="here/global_statusmessage/macros/portal_message">
            Portal status message
        </div>

        <h1 class="documentFirstHeading"
            i18n:translate="heading_addremove_products">Skin Dump</h1>

        <a href=""
           class="link-parent"
           tal:attributes="href string: $portal_url/plone_control_panel"
           i18n:translate="label_up_to_plone_setup">
            Up to Site Setup
        </a>

        <p class="documentDescription"
            i18n:translate="description_addremove_products">
            This is a form for dumping your zmi skin to filesystem based product.
        </p>

        <p class="discreet" i18n:translate="description_product_location">
            Navigate through all form tabs to set needed configuration for dump.
        </p>

        <form name="edit_form"
              action="href"
              method="post"
              class="enableFormTabbing"
              enctype="multipart/form-data"
              tal:attributes="action string:$here_url/$template_id">

            <fieldset id="fieldset-product"
                      tal:define="error_fsSkinDir python:errors.get('FSSkinDirectory');
                                  error_fsProdName python:errors.get('FSProductName');
                                  error_fsDestinationDir python:errors.get('FSDestinationDirectory');">
                <legend id="fieldsetlegend-product">
                  <label style="font-size: 110%" i18n:translate="label_product">Product</label>
                </legend>
                <p />
                <div class="FSProductName"
                     tal:attributes="class python: test(error_fsProdName, 'FSProductName error', 'FSProductName');">
                    <label class="FSProductName_title"
                          i18n:translate="label_FSProductName">Product name</label>
                    <span class="fieldRequired"
                           title="Required"
                           i18n:translate="label_required"
                           i18n:attributes="title title_required;">(Required)</span>
                    <div i18n:translate="help_FSProductName"
                         class="formHelp">
                        Name for dumped product. This name should be unique in Destination directory. The name must begin with alphabetical character, following with an alphanumeric combination, also underscore accepts, but not on boundaries.
                    </div>
                    <div tal:condition="error_fsProdName"
                         tal:content="error_fsProdName" i18n:translate="">Validation Error</div>

                    <input class="FSProductName_input"
                           type="text"
                           name="FSProductName"
                           value="qPloneSkinTemplate"
                           size="50"
                           tal:attributes="value request/FSProductName|nothing" />
                </div>
                <p />
                <div class="FSSkinDirectory"
                     tal:attributes="class python: test(error_fsSkinDir, 'FSSkinDirectory error', 'FSSkinDirectory');">
                    <label class="FSSkinDirectory_title"
                          i18n:translate="label_FSSkinDirectory">Skin name</label>
                    <span class="fieldRequired"
                           title="Required"
                           i18n:translate="label_required"
                           i18n:attributes="title title_required;">(Required)</span>
                    <div i18n:translate="help_FSSkinDirectory"
                         class="formHelp">
                         Skin name in dumped product. The name must begin with alphabetical character, following with an alphanumeric combination, also underscore accepts, but not on boundaries.
                    </div>
                    <div tal:condition="error_fsSkinDir"
                         tal:content="error_fsSkinDir" i18n:translate="">Validation Error</div>

                    <input class="FSSkinDirectory_input"
                           type="text"
                           name="FSSkinDirectory"
                           value=""
                           size="50"
                           tal:attributes="value request/FSSkinDirectory|nothing" />
                </div>
                <p />
                <div class="FSDestinationDirectory"
                     tal:define="destinationDir python:modules['Products.qPloneSkinDump.qPloneSkinDump'].getProductsPath();"
                     tal:attributes="class python: test(error_fsDestinationDir, 'FSDestinationDirectory error', 'FSDestinationDirectory');">
                    <label class="FSDestinationDirectory_title"
                          i18n:translate="label_FSDestinationDirectory">Destination directory</label>
                    <span class="fieldRequired"
                           title="Required"
                           i18n:translate="label_required"
                           i18n:attributes="title title_required;">(Required)</span>
                    <div i18n:translate="help_FSDestinationDirectory"
                         class="formHelp">
                         Absolute path to directory, where SkinProduct will be created.
                    </div>
                    <div tal:condition="error_fsDestinationDir"
                         tal:content="error_fsDestinationDir" i18n:translate="">Validation Error</div>

                    <input class="FSDestinationDirectory_input"
                           type="text"
                           name="FSDestinationDirectory"
                           value=""
                           size="50"
                           tal:attributes="value request/FSDestinationDirectory|destinationDir" />
                </div>
            </fieldset>

            <fieldset id="fieldset-zmi"
                      tal:define="error_zmiSN python:errors.get('ZMISkinName');
                                  error_zmiBSN python:errors.get('ZMIBaseSkinName')">
                <legend id="fieldsetlegend-zmi">
                  <label style="font-size: 110%" i18n:translate="legend_ZMI">Skin</label>
                </legend>
                <p />
                <div class="ZMIBaseSkinName"
                     tal:attributes="class python: test(error_zmiBSN, 'ZMIBaseSkinName error', 'ZMIBaseSkinName');">
                <!-- base for building layers list -->
                    <label class="ZMIBaseSkinName_title"
                           i18n:translate="label_ZMIBaseSkinName">Skin selection</label>
                    <span class="fieldRequired"
                           title="Required"
                           i18n:translate="label_required"
                           i18n:attributes="title title_required;">(Required)</span>
                    <div i18n:translate="help_ZMIBaseSkinName"
                         class="formHelp">
                        Select skin selection from portal_skins, which layers list will be used for creating new skin.
                    </div>
                    <div tal:condition="error_zmiBSN"
                         tal:content="error_zmiBSN" i18n:translate="">Validation Error</div>

                    <select tal:define="value request/ZMIBaseSkinName|string:Plone Tableless;
                                        skin_names portal/portal_skins/getSkinSelections"
                            tal:attributes="name string:ZMIBaseSkinName;
                                            id string:ZMIBaseSkinName;
                                            size string:1;
                                            tabindex tabindex/next;">
                        <option selected=""
                                value="#"
                                tal:repeat="skin_name skin_names"
                                tal:attributes="value nocall:skin_name;
                                                selected python:test(skin_name==value, 'selected', None);"
                                tal:content="skin_name"/>
                    </select>
                </div>
                <p />
                <div class="ZMISkinName"
                     tal:attributes="class python: test(error_zmiSN, 'ZMISkinName error', 'ZMISkinName');">
                <!-- folder in ZMI .../portal_skins, from which will be copyed content -->
                    <label class="ZMISkinName_title"
                           i18n:translate="label_ZMISkinName">Skin folders</label>
                    <span class="fieldRequired"
                           title="Required"
                           i18n:translate="label_required"
                           i18n:attributes="title title_required;">(Required)</span>
                    <div i18n:translate="help_ZMISkinName"
                         class="formHelp">
                        Select folders from portal_skins, which should be dumped to FS product's skins folder.
                    </div>
                    <div tal:condition="error_zmiSN"
                         tal:content="error_zmiSN" i18n:translate="">Validation Error</div>

                    <select class="ZMISkinName_input" id="ZMISkinName" 
                            size="5" name="ZMISkinName" multiple="1"
                            tal:define="value request/ZMISkinName|string:custom;
                                        p_skins_ids python:portal.portal_skins.objectIds(spec='Folder')"
                            tal:attributes="tabindex tabindex/next;">
                        <option selected=""
                                value="#"
                                tal:repeat="ps_folder p_skins_ids"
                                tal:attributes="value nocall:ps_folder;
                                                selected python:test(ps_folder==value, 'selected', None);"
                                tal:content="ps_folder"/>
                    </select>
                </div>
                <p />
                <div class="EraseFromSkin">
                <!-- erase content of folder in ZMI .../portal_skins after copying -->
                    <input class="EraseFromSkin_input"
                           type="checkbox"
                           name="EraseFromSkin"
                           id="EraseFromSkin"
                           value="0"
                           tal:attributes="checked python:test(request.has_key('EraseFromSkin'), 'checked', nothing)"
                           />
                    <label class="EraseFromSkin_title" for="EraseFromSkin"
                          i18n:translate="label_Erase">Erase folders from portal_skins after dump</label>
                </div>
            </fieldset>

            <fieldset id="fieldset-portlets">
                <legend id="fieldsetlegend-portlets" class="DoesCustomizeSlots">
                    <label style="font-size: 110%" i18n:translate="label_portlets">Portlets</label>
                </legend>
                <p />
                <div class="customize-portlets">
                    <input class="noborder"
                           type="checkbox"
                           name="dump_portlets"
                           id="DoesCustomizeSlots"
                           value="0"
                           tal:attributes="checked request/dump_portlets|nothing" />
                    <label for="DoesCustomizeSlots"
                           i18n:translate="label_dump_portlets">Dump Portlets</label>
                </div>
                <p/>
                <div class="SlotsCustomizing">
                    <label class="SlotsCustomizing_title"
                          i18n:translate="label_dump_policy">Dump Policy</label>

                    <div i18n:translate="help_SlotsCustomizing"
                         class="formHelp">

                    </div>

                    <input class="noborder"
                           type="radio"
                           name="dump_policy"
                           value="root"
                           id="root_dump_policy"
                           onclick="javascript:document.getElementById('selection_widget').style.display='none';"
                           tal:attributes="checked python:request.get('dump_policy', 'root') == 'root';" />
                    <label for="root_dump_policy"
                           i18n:translate="label_root_dump_policy">
                        Dump portlets only for portal root
                    </label>
                    <br />

                    <input class="noborder"
                           type="radio"
                           name="dump_policy"
                           value="all"
                           id="all_dump_policy"
                           onclick="javascript:document.getElementById('selection_widget').style.display='none';"
                           tal:attributes="checked python:request.get('dump_policy', 'root') == 'all';" />
                    <label for="all_dump_policy"
                           i18n:translate="label_all_dump_policy">
                        Dump portlets for the whole site content
                    </label>
                    <br />

                    <input class="noborder"
                           type="radio"
                           name="dump_policy"
                           value="selection"
                           id="selection_dump_policy"
                           onclick="javascript:document.getElementById('selection_widget').style.display='';"
                           tal:attributes="checked python:request.get('dump_policy', 'root') == 'selection';" />
                    <label for="selection_dump_policy"
                           i18n:translate="label_selection_dump_policy">
                        Dump portlets only for selected content objects
                    </label>
                    <div id="selection_widget" style="display:none;"
                         tal:define="friendly_types here/@@plone_portal_state/friendly_types;
                                     options python:here.portal_catalog(portal_types=friendly_types)">
                        <select name="dump_objects" multiple="1" size="7">
                            <option value="root_path"
                                    tal:content="string:[portal root]"
                                    tal:attributes="value string:" />
                            <tal:options repeat="option options">
                            <option value="object_path"
                                    tal:define="ppath python:'/'.join(option.getPath().split('/')[2:])"
                                    tal:content="ppath"
                                    tal:attributes="value ppath" />
                            </tal:options>
                        </select>
                    </div>
                </div>
            </fieldset>

            <fieldset id="fieldset-zexp"
                      tal:define="exp_data python:modules['Products.qPloneSkinDump.qPloneSkinDump'].getExportingData(here);">
                <legend id="fieldsetlegend-zexp" class="DoesExportObjects">
                    <label style="font-size: 110%" i18n:translate="label_portlets">Objects Export</label>
                </legend>
                <p />
                <div class="objects-export">
                    <input class="noborder"
                           type="checkbox"
                           name="DoesExportObjects"
                           id="DoesExportObjects"
                           value="DoesExportObjects"
                           tal:attributes="checked python:test(request.has_key('DoesExportObjects'), 'checked', nothing)" />
                    <label for="DoesExportObjects"
                           style="font-size: 110%"
                           i18n:translate="label_DoesExportObjects">Dump Objects</label>
                    <div class="formHelp"
                         i18n:translate="help_DoesExportObjects">
                      Selected below objects will be exported to New Skin Product. Then on installation generated Skin Product
                      they will be imported to portal root, based on choosed policy.
                    </div>
                </div>
                <p/>
                <div class="ImportPolicy"
                     tal:define="value python:request.get('import_policy', exp_data['default_import_policy'])">
                    <label  i18n:translate="label_ImportPolicy">Import Policy</label>
                    <div i18n:translate="help_ImportPolicy"
                         class="formHelp">
                         Choose *Import policy* for generated Skin Product. *Import policy* define behavior in case 
                         of meeting same id object in portal root with imported one. "only_new" - imported 
                         objects with ids, identical to portal root objects ids Not imported. 
                         "backup" - for portal root objects with same ids creates back_[date] directory and 
                         they moved there. All imported objects - importing to portal root. 
                         "overwrite" - all objects in portal root with same id overwrited with imported one.
                    </div>
                    <tal:loop tal:omit-tag=""
                              tal:repeat="i_policy_value exp_data/import_policy_list/keys">
                        <div tal:define="i_policy_name python:exp_data['import_policy_list'][i_policy_value];">
                            <input type="radio"
                                   name="import_policy"
                                   value="#"
                                   tal:attributes="value i_policy_value;
                                                   checked python:test(i_policy_value==value, 'checked', nothing)" />
                            <label class="default_import_policy"
                                   i18n:translate=""
                                   tal:content="i_policy_name"></label>
                        </div>
                    </tal:loop>
                </div>
                <p/>
                <div class="ExportingOjects">
                    <label class="ExportingOjects_title"
                          i18n:translate="label_ExportingOjects">Exporting objects</label>
                    <div i18n:translate="help_ExportingOjects"
                         class="formHelp">
                         Exporting object ids list. All selected objects will be exported to "&lt;Skin Product&gt;/import"
                         directory and WILL BE IMPORTED to portal root on SkinProduct installation.
                    </div>
                    <select multiple="multiple"
                            tal:define="value request/exporting_objects|python:[]"
                            tal:condition="exp_data/export_object_id_list"
                            tal:attributes="name string:exporting_objects:list;
                                            id string:ExportingOjects_list;
                                            size string:6;
                                            tabindex tabindex/next;">
                        <option selected=""
                                value="#"
                                tal:repeat="item exp_data/export_object_id_list"
                                tal:attributes="value nocall:item;
                                                selected python:test(item in value, 'selected', None);"
                                tal:content="item"/>
                        
                    </select>
                </div>
            </fieldset>

            <fieldset id="fieldset-resources"
                      tal:define="isFirst python:not request.get('dump_registries', None);
                                  checked_css python:test(isFirst, 'checked', test(request.has_key('DumpCSSRegistry'), 'checked', None));
                                  checked_js python:test(isFirst, 'checked', test(request.has_key('DumpJSRegistry'), 'checked', None));">
                <legend id="fieldsetlegend-resources" class="DoesExportResources">
                    <label for="DoesExportResources"
                           style="font-size: 110%"
                           i18n:translate="label_DoesExportResources">Resources</label>
                </legend>
                <p />
                <div class="formHelp"
                     i18n:translate="help_DoesExportResources">
                  Checked Portal Resources with current property sets will be exported from corresponding portal registries to New Skin Product.
                  Then on generated Skin Product installation, appropriate portal registry will be made identical to yours. This guarantee look and 
                  behavior of generated Skin Product in desired way. You can make corrections of exported resources in config.py module of New
                  Skin Product. This feature work only when generated Skin Product install on Plone v2.1+.
                </div>
                <input type="hidden" name="dump_registries" value="1" />
                <p/>
                <div class="DumpCSSRegistry">
                <!-- Dump portal_CSS registry resources -->
                    <input class="DumpCSSRegistry_input"
                           type="checkbox"
                           name="DumpCSSRegistry"
                           id="DumpCSSRegistry"
                           value="0"
                           tal:attributes="checked checked_css"
                           />
                    <label class="DumpCSSRegistry_title" for="DumpCSSRegistry"
                          i18n:translate="label_DumpCSSRegistry">Dump portal_css registry.</label>
                </div>
                <p/>
                <div class="DumpJSRegistry">
                <!-- Dump portal_javascripts registry resources -->
                    <input class="DumpJSRegistry_input"
                           type="checkbox"
                           name="DumpJSRegistry"
                           id="DumpJSRegistry"
                           value="0"
                           tal:attributes="checked checked_js"
                           />
                    <label class="DumpJSRegistry_title" for="DumpJSRegistry"
                          i18n:translate="label_DumpJSRegistry">Dump portal_javascripts registry.</label>
                </div>
                <p/>
            </fieldset>

            <!-- dump views -->
            <fieldset id="fieldset-views"
                      tal:define="error_zmiSN python:errors.get('ZMISkinName');
                                  error_zmiBSN python:errors.get('ZMIBaseSkinName')">
                <legend id="fieldsetlegend-views">
                  <label style="font-size: 110%" i18n:translate="legend_viewlets">Views</label>
                </legend>
                <p />
                <div class="dump-viewlets-field">
                    <div i18n:translate="help_dumpviewlets"
                         class="formHelp">
                        Check this field for dumping all customized objects in portal_view_customization tool.
                    </div>

                    <input class="dumpviewlets-input"
                           type="checkbox"
                           name="dump_viewlets"
                           id="dump_viewlets"
                           value="1"
                           tal:attributes="checked python:test(request.has_key('dump_viewlets'), 'checked', nothing)"
                           />
                    <label class="dumpviewlets-title" for="dump_viewlets"
                          i18n:translate="label_dumpviewlets">Dump views, viewlets and portlets</label>
                </div>
            </fieldset>

            <!-- fields for Controller Page Template -->
            <input type="hidden" name="form.submitted" value="1" />
            <div class="submitButton">
                <div class="field">
                    <input class="context"
                        type="submit"
                        name="form.button.form_submit"
                        value="Generate"
                        i18n:attributes="value"/>
                </div>
            </div>
        </form>

    </div>

</div>
</body>
</html>

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      xml:lang="en" lang="en"
      metal:use-macro="context/prefs_main_template/macros/master"
      i18n:domain="quintagroup.plonetabs">

<metal:block metal:fill-slot="top_slot"
             tal:define="dummy python:request.set('disable_border', 1)" />

<body>

<div metal:fill-slot="prefs_configlet_main"
     tal:define="test nocall:view/test;
                 category here/REQUEST/category|nothing;
                 category python:test(category and category != '', category, 'portal_tabs');
                 errors options/errors|nothing;
                 portal_state context/@@plone_portal_state;
                 portal_url portal_state/portal_url;
                 test nocall:view/test">

<div id="plonetabs_form">

<div id="app" class="qPloneTabs">

  <h1 id="plonetabs-form-title"
      class="documentFirstHeading"
      i18n:translate=""
      tal:content="python:view.getPageTitle(category)">Plone Tabs</h1>

  <a href=""
     class="link-parent"
     tal:attributes="href string:${portal_url}/plone_control_panel"
     i18n:domain="plone"
     i18n:translate="label_up_to_plone_setup">
    Up to Site Setup
  </a>

  <div>
    <form id="selectcategory_form"
          name="selectcategory_form"
          method="post"
          action="@@plonetabs-controlpanel"
          tal:attributes="action string:${portal_url}/${attrs/action}">
      <div class="field"
           tal:define="error errors/select_category|nothing"
           tal:attributes="class python:test(error, 'field error', 'field')">
        <div tal:replace="error">Error output</div>
        <label for="select_category" i18n:translate="label_select_category">Select category to manage</label>
        <select name="category"
                id="select_category"
                tal:define="categories view/getCategories">
          <option value="current_category" selected="selected"
                  tal:attributes="value category"
                  i18n:translate=""
                  tal:content="category" />
          <tal:options repeat="cat categories">
            <option tal:attributes="value cat"
                    tal:content="cat"
                    i18n:translate=""
                    tal:condition="python: cat != category" />
          </tal:options>
        </select>
        <input class="change-button kssHidden" type="submit" i18n:attributes="value" name="category.change" value="Change" />
      </div>
    </form>
  </div>

  <ul class="csshover"
      id="tabslist"
      tal:content="structure python:view.getActionsList(category=category, errors=errors)" />

  <form id="addaction"
        name="addaction_form"
        method="post"
        action="@@plonetabs-controlpanel"
        tal:attributes="action string:${portal_url}/${attrs/action}">
    <input type="hidden" name="form.submitted:boolean" value="True" />
    <input type="hidden" name="category" value="category" tal:attributes="value category" />
    <dl class="field-visible bridge">
      <dt>
        <label for="actvisible" i18n:translate="">Visible</label>
      </dt>
      <dd>
        <input id="actvisible" type="checkbox" value="1" checked="checked" title="visibility" name="visible"
               tal:attributes="checked request/visible|string:checked" />
      </dd>
    </dl>
    <dl class="field-name"
        tal:define="error errors/title|nothing"
        tal:attributes="class python:test(error, '%s error' % attrs['class'], attrs['class'])">
      <dt>
        <label for="actname" i18n:translate="">Name</label>
      </dt>
      <dd>
        <span class="error-container" tal:content="error"
              i18n:translate="">Validation error output</span>
        <input id="actname" type="text" value="" name="title" autocomplete="off"
               tal:attributes="value request/title|nothing"/>
      </dd>
    </dl>
    <dl class="field-action"
        tal:define="error errors/url_expr|nothing"
        tal:attributes="class python:test(error, '%s error' % attrs['class'], attrs['class'])">
      <dt>
        <label for="actaction" i18n:translate="">URL (Expression)</label>
      </dt>
      <dd>
        <span class="error-container" tal:content="error"
              i18n:translate="">Validation error output</span>
        <input id="actaction" type="text" value="" size="30" name="url_expr"
               tal:attributes="value request/url_expr|nothing"/>
      </dd>
    </dl>
    <dl class="collapseAdvanced expandedBlock">
      <dt class="headerAdvanced" i18n:translate="">Advanced</dt>
      <dd class="contentAdvanced">
        <dl class="field-id"
            tal:define="error errors/id|nothing"
            tal:attributes="class python:test(error, '%s error' % attrs['class'], attrs['class'])">
          <dt>
            <label for="actid" i18n:translate="">Id</label>
          </dt>
          <dd>
            <span class="error-container" tal:content="error"
                  i18n:translate="">Validation error output</span>
            <input id="actid" type="text" value="" name="id"
                   tal:attributes="value request/id|nothing" />
          </dd>
        </dl>
        <dl class="field-icon"
          tal:define="error errors/icon_expr|nothing"
          tal:attributes="class python:test(error, '%s error' % attrs['class'], attrs['class'])">
        <dt>
          <label for="actaction" i18n:translate="">Icon (Expression)</label>
        </dt>
        <dd>
          <span class="error-container" tal:content="error"
                i18n:translate="">Validation error output</span>
          <input id="actaction" type="text" value="" size="30" name="icon_expr"
                 tal:attributes="value request/icon_expr|nothing"/>
        </dd>
      </dl>
        <dl class="field-condition"
            tal:define="error errors/available_expr|nothing"
            tal:attributes="class python:test(error, '%s error' % attrs['class'], attrs['class'])">
          <dt>
            <label for="actcondition" i18n:translate="">Condition (Expression)</label>
          </dt>
          <dd>
            <span class="error-container" tal:content="error"
                  i18n:translate="">Validation error output</span>
            <input id="actcondition" type="text" value="" size="30" name="available_expr"
                   tal:attributes="value request/available_expr|nothing" />
          </dd>
        </dl>
        <div class="visualClear"><!-- --></div>
      </dd>
    </dl>
    <div class="add-controls">
      <input type="submit" id="buttonadd" class="context" i18n:attributes="value" name="add.add" value="Add" />
      <input type="submit" id="buttoncancel" class="standalone" i18n:attributes="value" name="add.cancel" value="Cancel" />
      <input type="reset"  id="buttonreset" class="editreset kssHidden context" i18n:attributes="value" name="add.reset" value="Reset"  />
    </div>
  </form>

  <tal:autogenerated_section tal:replace="structure python:view.getAutoGenereatedSection(cat_name=category, errors=errors)" />

</div>

</div>
<script>
  (function(a){var b,c=a();a.fn.sortable=function(d){var e=String(d);return d=a.extend({connectWith:!1},d),this.each(function(){if(/^enable|disable|destroy$/.test(e)){var f=a(this).children(a(this).data("items")).attr("draggable",e=="enable");e=="destroy"&&f.add(this).removeData("connectWith items").off("dragstart.h5s dragend.h5s selectstart.h5s dragover.h5s dragenter.h5s drop.h5s");return}var g,h,f=a(this).children(d.items),i=a("<"+(/^ul|ol$/i.test(this.tagName)?"li":"div")+' class="sortable-placeholder">');f.find(d.handle).mousedown(function(){g=!0}).mouseup(function(){g=!1}),a(this).data("items",d.items),c=c.add(i),d.connectWith&&a(d.connectWith).add(this).data("connectWith",d.connectWith),f.attr("draggable","true").on("dragstart.h5s",function(c){if(d.handle&&!g)return!1;g=!1;var e=c.originalEvent.dataTransfer;e.effectAllowed="move",e.setData("Text","dummy"),h=(b=a(this)).addClass("sortable-dragging").index()}).on("dragend.h5s",function(){b.removeClass("sortable-dragging").show(),c.detach(),h!=b.index()&&f.parent().trigger("sortupdate",{item:b}),b=null}).not("a[href], img").on("selectstart.h5s",function(){return this.dragDrop&&this.dragDrop(),!1}).end().add([this,i]).on("dragover.h5s dragenter.h5s drop.h5s",function(e){return!f.is(b)&&d.connectWith!==a(b).parent().data("connectWith")?!0:e.type=="drop"?(e.stopPropagation(),c.filter(":visible").after(b),!1):(e.preventDefault(),e.originalEvent.dataTransfer.dropEffect="move",f.is(this)?(d.forcePlaceholderSize&&i.height(b.outerHeight()),b.hide(),a(this)[i.index()<a(this).index()?"after":"before"](i),c.not(i).detach()):!c.is(this)&&!a(this).children(d.items).length&&(c.detach(),a(this).append(i)),!1)})})}})(jQuery);
</script>

<script>
//Functions declaration

  function sortableList() {
    console.log('sort changed');
    var formData = {};

    //?TODO formData.ajax_request = "edit_moveact"

    formData.ajax_request = true;
    var liIds = $('#tabslist li').map(function(i,n) {
      return $(n).attr('id');
    }).get().join('&');
    cat_name = $('#select_category').val();
    formData.cat_name  = cat_name;
    formData.actions  = liIds;
    formData.edit_moveact  = 'Move Action';
    //formData.push({ name: 'edit.moveact', value: 'Move Action'});
    $.ajax({
      type:'POST', 
      url: '@@plonetabs-controlpanel', 
      data: formData, 
      success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);

            if (json.status_code === 200){
                console.log('display success messages'); 
            }
            else{
                console.log('display error messages');
            }
      }
    });
  }

  function toggleCollapsible(el, collapse) {
    collapse = typeof collapse !== 'undefined' ? collapse : 'default';

    var node = el.parent(".collapseAdvanced"); 

    if(collapse!=='default'){
      if (collapse==true){
          console.log("removeClass expandedBlock; addClass collapsedBlock");
          node.removeClass('expandedBlock');
          node.addClass('collapsedBlock');
      } 
      else{
          console.log("removeClass collapsedBlock; addClass expandedBlock");
          node.removeClass('collapsedBlock');
          node.addClass('expandedBlock');
      }
    }
    else{
      if (node.hasClass('collapsedBlock')){
          console.log("removeClass collapsedBlock; addClass expandedBlock");
          node.removeClass('collapsedBlock');
          node.addClass('expandedBlock');
      } 
      else{
          console.log("removeClass expandedBlock; addClass collapsedBlock");
          node.removeClass('expandedBlock');
          node.addClass('collapsedBlock');
      }
    }

  }

  function startupActions() {
    console.log('running basic methods');
    $(".add-controls input").addClass('allowMultiSubmit');
    $(".edit-controls input").addClass('allowMultiSubmit');
    $(".collapseAdvanced").removeClass('expandedBlock').addClass('collapsedBlock');
  }
</script>

<script>
  $(document).ready(function() {
    console.log('document ready');
    $("#plonetabs_form").addClass('kssTabsActive');
    startupActions()
  });
</script>


<script>
/*CLIENTS METHODS*/

//titleWrapper
    $("#tabslist .titleWrapper").live("click", function() {
        console.log("#tabslist .titleWrapper clicked");
        ($(this).closest('li')).addClass('editing');
    });

//collapse
    $(".collapseAdvanced .headerAdvanced").live("click", function(event) {
        console.log(".collapseAdvanced .headerAdvanced clicked");
        toggleCollapsible($(this));
    });
</script>

<script> 
/*AJAX METHODS*/

//save(edit) 
  $('#tabslist .editsave').live("click", function(event) {
      console.log('.editsave clicked ');
      event.preventDefault();
      var formData = $(this).closest('form').serializeArray();
      formData.push({ name: "edit_save", value: this.value });

      //?TODO formData.ajax_request = "edit_save"

      formData.push({ name: "ajax_request", value: true });
      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);
            if (json.status_code === 200){
                console.log('display success messages');  

                $(this).closest('li').replaceWith(json.content);
            }
            else{
                console.log('display error messages');

                //if 'id' in errors or 'available_expr' in errors or 'url_expr' in errors:
                toggleCollapsible($(this).find('.headerAdvanced'), false);
            }
        }
    });
  });

//reset(cancel) 
  $('#tabslist .editcancel').live("click", function(event) {
      console.log('.editcancel clicked ');
      event.preventDefault();
      var formData={};
      formData.ajax_request = true;

      //?TODO formData.ajax_request = "edit_cancel"

      formData.edit_cancel = 'Cancel';
      var parentFormSelect = $(this).closest('li');
      formData.orig_id = parentFormSelect.find('.editform input[name="orig_id"]').val();
      formData.category = parentFormSelect.find('.editform input[name="category"]').val();
      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);

            if (json.status_code === 200){
                console.log('display success messages');
                parentFormSelect.replaceWith(json.content);
                
            }
            else{
                console.log('display error messages');
            }
        }
              
  });
});

//delete
  $('#tabslist .delete').live("click", function(event) {
      console.log('.delete clicked ');
      event.preventDefault();
      var formData={};
      formData.ajax_request = true;

      //?TODO formData.ajax_request = "edit_delete"

      formData.edit_delete = 'Delete';
      var parentFormSelect = $(this).closest('li');
      formData.orig_id = parentFormSelect.find('.editform input[name="orig_id"]').val();
      formData.category = parentFormSelect.find('.editform input[name="category"]').val();
      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);
            if (json.status_code === 200){
                console.log('display success messages');
                parentFormSelect.remove()
            }
            else{
                console.log('display error messages');
            }
            
        }
              
  });
});

//visibility
  $('#tabslist input.visibility').live("click", function(event) {
      var formData={};
      formData.ajax_request = true;
      console.log('#tabslist input.visibility clicked ');
      formData.tabslist_visible = 'Set visibillity';
      var parentFormSelect = $(this).closest('li');
      formData.orig_id = parentFormSelect.find('.editform input[name="orig_id"]').val();
      formData.category = parentFormSelect.find('.editform input[name="category"]').val();
      formData.visibility = $(this).is(":checked");

      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);


            if (json.status_code === 200){
                console.log('display success messages');
                
                if (formData.visibility === true){
                    parentFormSelect.removeClass("invisible");
                }
                else{
                    parentFormSelect.addClass("invisible");
                }
            }
            else{
                console.log('display error messages');
            }
        }
              
  });
});

//changing category
  $('#select_category').change(function(event) {
        var formData={};
        formData.ajax_request = true;
        console.log('select_category changed ');
        formData.category = $(this).val();
        formData.category_change = 'Change';
        $.ajax({
          type: 'POST', 
          url:  '@@plonetabs-controlpanel', 
          data: formData, 
          success: function(response) {
              var json = JSON.parse(response)
              console.log(json);
              if (json.status_code === 200){
                  console.log('display success messages');
                  $('form[name=addaction_form] input[name=category]').text($('#select_category').val());
                  $('#tabslist').html(json.actionslist);
                  $('#autogeneration_section').html(json.section);
                  $('#plonetabs-form-title').text(json.title);

                  $('#addaction').removeClass('adding');
                  toggleCollapsible($('form[name=addaction_form] .headerAdvanced'), true);

                  //Sorting lists
                  $('#tabslist').unbind();
                  $('#tabslist').sortable().bind('sortupdate', function(){sortableList()});

                  //Running startupActions
                  startupActions();
              }
              else{
                  console.log('display error messages');
              }
          }
        });
  });
</script>

<script> 
//portal_tabs methods

//visibility
  $('#roottabs .visibility').live("click", function(event) {
      var formData={};
      formData.ajax_request = true;
      console.log('#roottabs .visibility clicked ');
      formData.roottabs_visible = 'Visibillity';
      var parentFormSelect = $(this).closest('li');
      formData.orig_id = parentFormSelect.attr('id');
      formData.visibility = $(this).is(":checked");
      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
            var json = JSON.parse(response)
            console.log("response from server: ");
            console.log(json);
            if (json.status_code === 200){
                console.log('display success messages');
                $('#portal-globalnav').load(' #portal-globalnav>*');
                if (formData.visibility === true){
                    parentFormSelect.removeClass("invisible");
                }
                else{
                    parentFormSelect.addClass("invisible");
                }
                
            }
            else{
                console.log('display error messages');
            }
        }
              
  });
});

//General func for toggleGeneratedTabs and nonfolderish_tabs request 
  function sendRequest(field_name, checked_status){
    var formData={};
    formData.ajax_request = true;
    formData.field = field_name;
    formData.generated_tabs = checked_status;
    $.ajax({
      type:'POST', 
      url: '@@plonetabs-controlpanel', 
      data: formData, 
      success: function(response) {
          var json = JSON.parse(response)
          console.log("response from server: ");
          console.log(json);
          if (json.status_code === 200){
              $('#roottabs').html(json.content);
              $('#portal-globalnav').load(' #portal-globalnav>*');
              console.log('display success messages');
          }
          else{
              console.log('display error messages');
          }
      }     
    });
  }

//toggleGeneratedTabs
  $('#generated_tabs').live("click", function() {
      console.log('#generated_tabs clicked ');
      var field_name = 'disable_folder_sections';
      var checked_status = $(this).is(":checked");
      sendRequest(field_name, checked_status);
  });

//nonfolderish_tabs
  $('#nonfolderish_tabs').live("click", function() {
      console.log('#nonfolderish_tabs clicked ');
      var field_name = 'disable_nonfolderish_sections';
      var checked_status = $(this).is(":checked");
      sendRequest(field_name, checked_status);
  });
</script>



<script> 
//Add new action methods

//focus
    $("#actname").live("focus", function() {
        console.log("#actname on focus");
        $('#addaction').addClass('adding');
    });

//cancel
  $('#buttoncancel').live("click", function(event) {
      console.log('#buttoncancel clicked ');
      event.preventDefault();
      $('#addaction').removeClass('adding');
      toggleCollapsible($('form[name=addaction_form] .headerAdvanced'), true);
      //('#kssPortalMessage').css("display", "none");
  });

//add
  //TODO: add #addaction:submit event processing
  $('#buttonadd').live("click", function(event) {
      console.log('#buttonadd clicked ');
      event.preventDefault();
      var formData = $(this).closest('form').serializeArray();
      formData.push({ name: "add_add", value: this.value });
      formData.push({ name: "ajax_request", value: true });
      formData.push({ name: "cat_name", value: $('#select_category').val() });

      $.ajax({
        type:'POST', 
        url: '@@plonetabs-controlpanel', 
        data: formData, 
        success: function(response) {
          var json = JSON.parse(response)
          console.log("response from server: ");
          console.log(json);
          if (json.status_code === 200){
            console.log('display success messages');

            $("#tabslist").append(json.content)    
            $("addaction").removeClass("adding");
            toggleCollapsible($('form[name=addaction_form] .headerAdvanced'), true);

            //TODO
            //self.kss_blur(ksscore.getHtmlIdSelector('actname'))

          }
          else{
            console.log('display error messages');

            //TODO
            //if 'id' in errors or 'available_expr' in errors:
            toggleCollapsible($('form[name=addaction_form] .headerAdvanced'), false);
            
            
          }
        }
    });
  });
</script>
</div>

</body>
</html>
